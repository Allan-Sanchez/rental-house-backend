scalar Date

type User {
  uuid: ID
  name: String
  email: String
  age: Int
  address: String
  dpi: String
  phone: String
  role: ROLES
  createdAt: Date
}
input UserInput {
  name: String!
  email: String!
  password: String!
  age: Int!
  address: String!
  dpi: String!
  phone: String!
  role: ROLES!
}
input UserInputUpdate {
  name: String
  email: String
  password: String
  age: Int
  address: String
  dpi: String
  phone: String
  role: ROLES
}
type Token {
  token: String
}

enum ROLES {
  USER
  ADMIN
}
type Query {
  getUsers: [User!]
  getUser(uuid: String!): User!
}

type Mutation {
  newUser(fields: UserInput): User
  deleteUser(uuid: String!): String
  updateUser(uuid: String!, fields: UserInputUpdate!): User
}
